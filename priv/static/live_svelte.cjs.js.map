{
  "version": 3,
  "sources": ["../../assets/js/live_svelte/index.js", "../../assets/js/live_svelte/utils.js", "../../assets/js/live_svelte/render.js", "../../assets/js/live_svelte/hooks.js"],
  "sourcesContent": ["export {getRender} from \"./render\"\nexport {getHooks} from \"./hooks\"\n", "export function normalizeComponents(components) {\n    if (!Array.isArray(components.default) || !Array.isArray(components.filenames)) return components\n\n    const normalized = {}\n    for (const [index, module] of components.default.entries()) {\n        const Component = module.default\n        const name = components.filenames[index].replace(\"../svelte/\", \"\").replace(\".svelte\", \"\")\n        normalized[name] = Component\n    }\n    return normalized\n}\n", "import {normalizeComponents} from \"./utils\"\n\nexport function getRender(components) {\n    components = normalizeComponents(components)\n\n    return function render(name, props, slots) {\n        const Component = components[name]\n        const $$slots = Object.fromEntries(Object.entries(slots).map(([k, v]) => [k, () => v]))\n        return Component.render(props, {$$slots})\n    }\n}\n", "import {normalizeComponents} from \"./utils\"\n\nfunction getAttributeJson(ref, attributeName) {\n    const data = ref.el.getAttribute(attributeName)\n    return data ? JSON.parse(data) : {}\n}\n\nfunction detach(node) {\n    node.parentNode?.removeChild(node)\n}\n\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null)\n}\n\nfunction noop() {}\n\nfunction getSlots(ref) {\n    const slots = {}\n\n    for (const slotName in getAttributeJson(ref, \"data-slots\")) {\n        const slot = () => {\n            return {\n                getElement() {\n                    const bese64 = getAttributeJson(ref, \"data-slots\")[slotName]\n                    const element = document.createElement(\"div\")\n                    element.innerHTML = atob(base64).trim()\n                    return element\n                },\n                update() {\n                    detach(this.savedElement)\n                    this.savedElement = this.getElement()\n                    insert(this.savedTarget, this.savedElement, this.savedAnchor)\n                },\n                c: noop,\n                m(target, anchor) {\n                    this.savedTarget = target\n                    this.savedAnchor = anchor\n                    this.savedElement = this.getElement()\n                    insert(this.savedTarget, this.savedElement, this.savedAnchor)\n                },\n                d(detaching) {\n                    if (detaching) detach(this.savedElement)\n                },\n                l: noop,\n            }\n        }\n\n        slots[slotName] = [slot]\n    }\n\n    return slots\n}\n\nfunction getLiveJsonProps(ref) {\n    const json = getAttributeJson(ref, \"data-live-json\")\n\n    // On SSR, data-live-json is the full object we want\n    // After SSR, data-live-json is an array of keys, and we'll get the data from the window\n    if (!Array.isArray(json)) return json\n\n    const liveJsonData = {}\n    for (const liveJsonVariable of json) {\n        const data = window[liveJsonVariable]\n        if (data) liveJsonData[liveJsonVariable] = data\n    }\n    return liveJsonData\n}\n\nfunction getProps(ref) {\n    return {\n        ...getAttributeJson(ref, \"data-props\"),\n        ...getLiveJsonProps(ref),\n        live: ref,\n        $$slots: getSlots(ref),\n        $$scope: {},\n    }\n}\n\nfunction findSlotCtx(component) {\n    // The default slot always exists if there's a slot set\n    // even if no slot is set for the explicit default slot\n    return component.$$.ctx.find(ctxElement => ctxElement?.default)\n}\n\nexport function getHooks(components) {\n    components = normalizeComponents(components)\n\n    const SvelteHook = {\n        mounted() {\n            const componentName = this.el.getAttribute(\"data-name\")\n            if (!componentName) {\n                throw new Error(\"Component name must be provided\")\n            }\n\n            const Component = components[componentName]\n            if (!Component) {\n                throw new Error(`Unable to find ${componentName} component.`)\n            }\n\n            for (const liveJsonElement of Object.keys(getAttributeJson(this, \"data-live-json\"))) {\n                window.addEventListener(`${liveJsonElement}_initialized`, event => this._instance.$set(getProps(this)), false)\n                window.addEventListener(`${liveJsonElement}_patched`, event => this._instance.$set(getProps(this)), false)\n            }\n\n            this._instance = new Component({\n                target: this.el,\n                props: getProps(this),\n                hydrate: this.el.hasAttribute(\"data-ssr\"),\n            })\n        },\n\n        updated() {\n            // Set the props\n            this._instance.$set(getProps(this))\n\n            // Set the slots\n            const slotCtx = findSlotCtx(this._instance)\n            for (const key in slotCtx) {\n                slotCtx[key][0]().update()\n            }\n        },\n\n        destroyed() {\n            // We don't want to destroy the component\n            // If we do a page navigation, this would remove the component in the DOM,\n            // and then it would to the transition, causing a flicker of unrendered content\n            // Since we're doing a page transition anyway, the component will be remove automatically\n        },\n    }\n\n    return {\n        SvelteHook,\n    }\n}\n"],
  "mappings": "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",
  "names": ["module"]
}
